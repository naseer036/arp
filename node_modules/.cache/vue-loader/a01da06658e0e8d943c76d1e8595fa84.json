{"remainingRequest":"/Users/dev2/arp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dev2/arp/src/components/result.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/dev2/arp/src/components/result.vue","mtime":1588667300757},{"path":"/Users/dev2/arp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dev2/arp/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/dev2/arp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dev2/arp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["result.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"result.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n      <mdb-row style=\"margin-top: 10px;\" class=\"justify-content-md-center align-items-center\">\n        <mdb-col sm=\"12\">\n          <mdb-card>\n            <mdb-card-body>\n              <mdb-card-title>Card title</mdb-card-title>\n              <hr/>\n              <mdb-card-text>\n                <div id=\"combo\"></div>\n              </mdb-card-text>\n            </mdb-card-body>\n          </mdb-card>\n        </mdb-col>\n      </mdb-row>\n      <mdb-row style=\"margin-top: 10px;\" class=\"justify-content-md-center align-items-center\">\n        <mdb-col sm=\"6\">\n          <mdb-card>\n            <mdb-card-body>\n              <mdb-card-title>Card title</mdb-card-title>\n              <hr/>\n              <mdb-card-text>\n                <div id=\"pieChart\"></div>\n              </mdb-card-text>\n            </mdb-card-body>\n          </mdb-card>\n        </mdb-col>\n        <mdb-col sm=\"6\">\n          <mdb-card>\n            <mdb-card-body>\n              <mdb-card-title>Card title</mdb-card-title>\n              <hr/>\n              <mdb-card-text>\n                <mdb-card-text>\n                  <div id=\"negativeBar\"></div>\n                </mdb-card-text>\n              </mdb-card-text>\n            </mdb-card-body>\n          </mdb-card>\n        </mdb-col>\n      </mdb-row>\n      <mdb-row style=\"margin-top: 10px;\" class=\"justify-content-md-center align-items-center\">\n        <mdb-col sm=\"12\">\n          <mdb-card>\n            <mdb-card-body >\n              <mdb-card-title>Card title</mdb-card-title>\n              <hr/>\n              <mdb-card-text>\n                <div id=\"timeLine\"></div>\n              </mdb-card-text>\n            </mdb-card-body>\n          </mdb-card>\n        </mdb-col>\n      </mdb-row>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from \"vue\";\nimport { mdbRow, mdbCol, mdbCard, mdbCardTitle, mdbCardBody, mdbCardText } from 'mdbvue';\nimport ApexCharts from 'apexcharts'\nimport moment from 'moment';\n\nexport default Vue.extend({\n  name: \"result\",\n  props: {\n    msg: String\n  },\n  data: function () {\n    return {\n      barDatasets: {\n        labels: ['January', 'February'],\n        datasets: [\n          {\n            label: 'Data One',\n            backgroundColor: '#f87979',\n            data: [40, 20]\n          }\n        ]\n      },\n      barOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    }\n  },\n  components: {\n\t\tmdbRow,\n\t\tmdbCol,\n\t\tmdbCard,\n\t\tmdbCardBody,\n    mdbCardText,\n    mdbCardTitle\n  },\n  methods:{\n    comboCharts() {\n        const options = {\n            series: [{\n            name: 'Website Blog',\n            type: 'column',\n            data: [440, 505, 414, 671, 227, 413, 201, 352, 752, 320, 257, 160]\n          }, {\n            name: 'Social Media',\n            type: 'line',\n            data: [23, 42, 35, 27, 43, 22, 17, 31, 22, 22, 12, 16]\n          }],\n            chart: {\n            height: 350,\n            type: 'line',\n          },\n          stroke: {\n            width: [0, 4]\n          },\n          title: {\n            text: 'Traffic Sources'\n          },\n          dataLabels: {\n            enabled: true,\n            enabledOnSeries: [1]\n          },\n          labels: ['01 Jan 2001', '02 Jan 2001', '03 Jan 2001', '04 Jan 2001', '05 Jan 2001', '06 Jan 2001', '07 Jan 2001', '08 Jan 2001', '09 Jan 2001', '10 Jan 2001', '11 Jan 2001', '12 Jan 2001'],\n          xaxis: {\n            type: 'datetime'\n          },\n          yaxis: [{\n            title: {\n              text: 'Website Blog',\n            },  \n          }, {\n            opposite: true,\n            title: {\n              text: 'Social Media'\n            }\n          }]\n        };\n        const chart = new ApexCharts(document.querySelector(\"#combo\"), options);\n        chart.render();\n    },\n    timeLine() {\n      const options = {\n          series: [\n          {\n            data: [\n              {\n                x: 'Analysis',\n                y: [\n                  new Date('2019-02-27').getTime(),\n                  new Date('2019-03-04').getTime()\n                ],\n                fillColor: '#008FFB'\n              },\n              {\n                x: 'Design',\n                y: [\n                  new Date('2019-03-04').getTime(),\n                  new Date('2019-03-08').getTime()\n                ],\n                fillColor: '#00E396'\n              },\n              {\n                x: 'Coding',\n                y: [\n                  new Date('2019-03-07').getTime(),\n                  new Date('2019-03-10').getTime()\n                ],\n                fillColor: '#775DD0'\n              },\n              {\n                x: 'Testing',\n                y: [\n                  new Date('2019-03-08').getTime(),\n                  new Date('2019-03-12').getTime()\n                ],\n                fillColor: '#FEB019'\n              },\n              {\n                x: 'Deployment',\n                y: [\n                  new Date('2019-03-12').getTime(),\n                  new Date('2019-03-17').getTime()\n                ],\n                fillColor: '#FF4560'\n              }\n            ]\n          }\n        ],\n          chart: {\n          height: 350,\n          type: 'rangeBar'\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            distributed: true,\n            dataLabels: {\n              hideOverflowingLabels: false\n            }\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          formatter: function(val, opts) {\n            const label = opts.w.globals.labels[opts.dataPointIndex]\n            const a = moment(val[0])\n            const b = moment(val[1])\n            const diff = b.diff(a, 'days')\n            return label + ': ' + diff + (diff > 1 ? ' days' : ' day')\n          },\n          style: {\n            colors: ['#f3f4f5', '#fff']\n          }\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          show: false\n        },\n        grid: {\n          row: {\n            colors: ['#f3f4f5', '#fff'],\n            opacity: 1\n          }\n        }\n        };\n        const chart = new ApexCharts(document.querySelector(\"#timeLine\"), options);\n        chart.render();\n    },\n    pieChart () {\n      const options = {\n        series: [44, 55, 13, 43, 22],\n        chart: {\n          width: 380,\n          type: 'pie',\n        },\n        labels: ['Task A', 'Task B', 'Task C', 'Task D', 'Task E'],\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }]\n      };\n      const chart = new ApexCharts(document.querySelector(\"#pieChart\"), options);\n      chart.render();\n    },\n    negativeBar () {\n      const options = {\n          series: [{\n          name: 'Expected hours',\n          data: [0.4, 0.65, 0.76, 0.88, 1.5, 2.1, 2.9, 3.8, 3.9, 4.2, 4, 4.3, 4.1, 4.2, 4.5,\n            3.9, 3.5, 3\n          ]\n        },\n        {\n          name: 'Actual Hours',\n          data: [-0.8, -1.05, -1.06, -1.18, -1.4, -2.2, -2.85, -3.7, -3.96, -4.22, -4.3, -4.4,\n            -4.1, -4, -4.1, -3.4, -3.1, -2.8\n          ]\n        }\n        ],\n          chart: {\n          type: 'bar',\n          height: 440,\n          stacked: true\n        },\n        colors: ['#008FFB', '#FF4560'],\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            barHeight: '80%',\n        \n          },\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          width: 1,\n          colors: [\"#fff\"]\n        },\n        \n        grid: {\n          xaxis: {\n            lines: {\n              show: false\n            }\n          }\n        },\n        yaxis: {\n          min: -5,\n          max: 5,\n          title: {\n            // text: 'Age',\n          },\n        },\n        tooltip: {\n          shared: false,\n          x: {\n            formatter: function (val) {\n              return val\n            }\n          },\n          y: {\n            formatter: function (val) {\n              return Math.abs(val) + \"%\"\n            }\n          }\n        },\n        title: {\n          text: 'Expected vs actual hours'\n        },\n        xaxis: {\n          categories: ['85+', '80-84', '75-79', '70-74', '65-69', '60-64', '55-59', '50-54',\n            '45-49', '40-44', '35-39', '30-34', '25-29', '20-24', '15-19', '10-14', '5-9',\n            '0-4'\n          ],\n          title: {\n            text: 'Percent'\n          },\n          labels: {\n            formatter: function (val) {\n              return Math.abs(Math.round(val)) + \"%\"\n            }\n          }\n        },\n        };\n\n        const chart = new ApexCharts(document.querySelector(\"#negativeBar\"), options);\n        chart.render();\n    }\n  },\n  mounted() {\n    this.comboCharts()\n    this.pieChart()\n    this.timeLine()\n    this.negativeBar()\n  }\n});\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped></style>\n"]}]}